server:
  port: 8020
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true
  ssl:
    enabled: true
    enabled-protocols: TLSv1.2
    key-alias: ${SSL_KEY_ALIAS:}
    key-password: ${SSL_KEY_PASSWORD:}
    key-store: classpath:vengeance.jks
    key-store-password: ${SSL_KEYSTORE_PASSWORD:}
    key-store-type: JKS
    protocol: TLS

spring:
  application:
    name: gamma-gateway-service
  redis:
    host: ${REDIS_HOST:}
    port: ${REDIS_PORT:}
    database: ${REDIS_DB:}
    password: ${REDIS_PASSWORD:}
  cloud:
    gateway:
      httpclient:
        ssl:
          key-password: ${SSL_KEY_PASSWORD:}
          key-store: classpath:vengeance.jks
          key-store-password: ${SSL_KEYSTORE_PASSWORD:}
          key-store-type: JKS
          use-insecure-trust-manager: true
          handshake-timeout: 10000
      filter:
        request-rate-limiter:
          deny-empty-key: false
          empty-key-status-code: 503
      routes:
        - id: alpha-sound-service
          uri: lb://alpha-sound-service/alpha-sound
          predicates:
            - Path=/alpha-sound/**
        - id: kappa-talk-server
          uri: lb://kappa-talk-server/kappa-talk
          predicates:
            - Path=/kappa-talk/**
        - id: lambda-auth-service
          uri: lb://lambda-auth-service/lambda-auth
          predicates:
            - Path=/lambda-auth/**
          filters:
          - name: RequestRateLimiter
            args:
              key-resolver: "#{@addressKeyResolver}"
              redis-rate-limiter.replenishRate: 100
              redis-rate-limiter.burstCapacity: 50
              redis-rate-limiter.requestedTokens: 1
        - id: delta-notification-service
          uri: lb://delta-notification-service/delta-notification
          predicates:
            - Path=/delta-notification/**
        - id: omega-buy-service
          uri: lb://omega-buy-service/omega-buy
          predicates:
            - Path=/omega-buy/**
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
    loadbalancer:
      ribbon:
        enabled: false
eureka:
  instance:
    hostname: gamma-gateway.vengeance.net
    secure-port-enabled: true
    non-secure-port-enabled: false
  #    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVICE_URL:}
custom:
  trust-store-password: ${SSL_TRUSTSTORE_PASSWORD:}
  trust-store-type: JKS
logging:
  config: classpath:log4j-spring.xml
  level:
    org.springframework.cloud.gateway: TRACE
    com.vengeance.gamma: DEBUG