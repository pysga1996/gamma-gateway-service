logging:
  config: classpath:log4j-spring.xml
  level:
    org.springframework.cloud.gateway: INFO
    root: INFO
server:
  port: 80
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
  ssl:
    enabled: false
spring:
  application:
    name: gamma-gateway-service
  redis:
    host: ${REDIS_HOST:}
    port: ${REDIS_PORT:}
    database: ${REDIS_DB:}
    password: ${REDIS_PASSWORD:}
  cloud:
    gateway:
      filter:
        request-rate-limiter:
          deny-empty-key: false
          empty-key-status-code: 503
      routes:
        - id: chi-discovery-service
          uri: http://chi-discovery.vengeance.svc.cluster.local
          predicates:
            - Path=/service/chi-discovery/**
          filters:
            - RewritePath=/service/chi-discovery/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/alpha-sound
        - id: phi-config-service
          uri: http://phi-config.vengeance.svc.cluster.local
          predicates:
            - Path=/service/phi-config/**
          filters:
            - RewritePath=/service/phi-config/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/phi-config
        - id: alpha-sound-service
          uri: http://alpha-sound.vengeance.svc.cluster.local
          predicates:
            - Path=/service/alpha-sound/**
          filters:
            - RewritePath=/service/alpha-sound/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/alpha-sound
        - id: kappa-talk-server
          uri: http://kappa-talk.vengeance.svc.cluster.local
          predicates:
            - Path=/server/kappa-talk/**
          filters:
            - RewritePath=/server/kappa-talk/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /server/kappa-talk
        - id: lambda-auth-service
          uri: http://lambda-auth.vengeance.svc.cluster.local
          predicates:
            - Path=/service/lambda-auth/**
          filters:
            - RewritePath=/service/lambda-auth/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/lambda-auth
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@addressKeyResolver}"
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 50
                redis-rate-limiter.requestedTokens: 1
        - id: delta-notification-service
          uri: http://delta-notification.vengeance.svc.cluster.local
          predicates:
            - Path=/service/delta-notification/**
          filters:
            - RewritePath=/service/delta-notification/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/delta-notification
        - id: vengeance-client
          uri: http://vengeance.vengeance.svc.cluster.local
          predicates:
            - Path=/**
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      x-forwarded:
        enabled: true
        for-enabled: true
        host-enabled: true
        port-enabled: true
        proto-enabled: true
        prefix-enabled: false
        for-append: true
        host-append: true
        port-append: true
        proto-append: true
        prefix-append: false
    loadbalancer:
      ribbon:
        enabled: false
custom:
  trust-store-password: ${SSL_TRUSTSTORE_PASSWORD:}
  trust-store-type: JKS
