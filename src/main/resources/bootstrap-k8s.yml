spring:
  application:
    name: gamma-gateway-service
  cloud:
    gateway:
      filter:
        request-rate-limiter:
          deny-empty-key: false
          empty-key-status-code: 503
      routes:
        - id: chi-discovery-service
          uri: http://chi-discovery.vengeance.svc.cluster.local
          predicates:
            - Path=/service/chi-discovery/**
          filters:
            - RewritePath=/service/chi-discovery/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/alpha-sound
        - id: phi-config-service
          uri: http://phi-config.vengeance.svc.cluster.local
          predicates:
            - Path=/service/phi-config/**
          filters:
            - RewritePath=/service/phi-config/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/phi-config
        - id: alpha-sound-service
          uri: http://alpha-sound.vengeance.svc.cluster.local
          predicates:
            - Path=/service/alpha-sound/**
          filters:
            - RewritePath=/service/alpha-sound/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/alpha-sound
        - id: kappa-talk-server
          uri: http://kappa-talk.vengeance.svc.cluster.local
          predicates:
            - Path=/server/kappa-talk/**
          filters:
            - RewritePath=/server/kappa-talk/(?<segment>.*), /kappa-talk/$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /server/kappa-talk
        - id: kappa-talk-server-sockjs
          uri: ws://kappa-talk-sockjs.vengeance.svc.cluster.local
          predicates:
            - Path=/server/kappa-talk/ws/info/**
          filters:
            - RewritePath=/server/kappa-talk/(?<segment>.*), /kappa-talk/$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /server/kappa-talk
        - id: kappa-talk-server-websocket
          uri: ws://kappa-talk-ws.vengeance.svc.cluster.local
          predicates:
            - Path=/server/kappa-talk/ws/**
          filters:
            - RewritePath=/server/kappa-talk/(?<segment>.*), /kappa-talk/$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /server/kappa-talk
        - id: lambda-auth-service
          uri: http://lambda-auth.vengeance.svc.cluster.local
          predicates:
            - Path=/service/lambda-auth/**
          filters:
            - RewritePath=/service/lambda-auth/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/lambda-auth
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@addressKeyResolver}"
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 50
                redis-rate-limiter.requestedTokens: 1
        - id: delta-notification-service
          uri: http://delta-notification.vengeance.svc.cluster.local
          predicates:
            - Path=/service/delta-notification/**
          filters:
            - RewritePath=/service/delta-notification/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Forwarded-Prefix, /service/delta-notification
        - id: vengeance-client
          uri: http://vengeance.vengeance.svc.cluster.local
          predicates:
            - Path=/**
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      x-forwarded:
        enabled: true
        for-enabled: true
        host-enabled: true
        port-enabled: true
        proto-enabled: true
        prefix-enabled: false
        for-append: true
        host-append: true
        port-append: true
        proto-append: true
        prefix-append: false
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
            allowedCredentials: true
    config:
#      uri: ${CONFIG_URI:}
      discovery:
        service-id: phi-config-service
        enabled: true
      username: ${CONFIG_USERNAME:}
      password: ${CONFIG_PASSWORD:}
      label: ${CONFIG_GIT_BRANCH:}
    loadbalancer:
      ribbon:
        enabled: false
eureka:
  instance:
    hostname: ${GAMMA_GATEWAY_HOSTNAME:}
  #    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVICE_URL:}